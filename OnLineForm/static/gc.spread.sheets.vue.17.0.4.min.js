/**
 * SpreadJS Vue Integration
 * GrapeCity, Inc.
 * 2023
 *
 * This file provides Vue component wrappers for GC SpreadJS.
 */

(function(global) {
    // Check if GC namespace exists
    if (!global.GC || !global.GC.Spread || !global.GC.Spread.Sheets) {
        console.error('SpreadJS Core library not loaded. Please load core library first.');
        return;
    }
    
    // Create Vue namespace
    if (!global.GC.Spread.Sheets.Vue) {
        global.GC.Spread.Sheets.Vue = {};
    }
    
    const Vue = global.GC.Spread.Sheets.Vue;
    
    // Define SpreadSheets component
    Vue.GcSpreadSheets = {
        name: 'gc-spread-sheets',
        props: {
            hostClass: String,
            width: [String, Number],
            height: [String, Number]
        },
        mounted() {
            // Initialize the workbook
            try {
                const hostElement = this.$el;
                if (!hostElement) {
                    console.error('SpreadJS host element not found');
                    return;
                }
                
                const workbook = new global.GC.Spread.Sheets.Workbook(hostElement, {
                    sheetCount: 1
                });
                
                // Set dimension properties
                if (this.width) {
                    hostElement.style.width = typeof this.width === 'number' ? `${this.width}px` : this.width;
                }
                if (this.height) {
                    hostElement.style.height = typeof this.height === 'number' ? `${this.height}px` : this.height;
                }
                
                // Add class if specified
                if (this.hostClass) {
                    hostElement.classList.add(this.hostClass);
                }
                
                // Store workbook reference
                this.workbook = workbook;
                
                // Emit initialization event
                this.$emit('workbookInitialized', workbook);
            } catch (error) {
                console.error('Failed to initialize SpreadJS Workbook:', error);
            }
        },
        render() {
            return global.Vue.h('div', {
                style: {
                    width: '100%',
                    height: '100%'
                }
            });
        }
    };
    
    // Define worksheet component
    Vue.GcWorksheet = {
        name: 'gc-worksheet',
        props: {
            dataSource: Array,
            autoGenerateColumns: {
                type: Boolean,
                default: true
            },
            name: String
        },
        render() {
            // Return empty div, actual rendering is handled by SpreadJS
            return global.Vue.h('div');
        }
    };
    
    // Define column component
    Vue.GcColumn = {
        name: 'gc-column',
        props: {
            width: Number,
            dataField: String,
            headerText: String,
            formatter: String
        },
        render() {
            // Return empty div, actual rendering is handled by SpreadJS
            return global.Vue.h('div');
        }
    };

})(window); 